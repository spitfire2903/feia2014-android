package br.com.sevencode.android.feia2014.db;

import java.util.List;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import br.com.sevencode.android.feia2014.db.EventDao;
import br.com.sevencode.android.feia2014.db.MyEventDao;
import br.com.sevencode.android.feia2014.db.EventDao.Properties;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 2;//1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        EventDao.createTable(db, ifNotExists);
        MyEventDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        EventDao.dropTable(db, ifExists);
        MyEventDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            
            if(newVersion == 2 && oldVersion == 1){
            	makeChangesV1toV2(db);
            } else{
            	dropAllTables(db, true);
            	onCreate(db);
            }
        }
        
        public void makeChangesV1toV2(SQLiteDatabase db){
    		List<Event> events = null;
    		
    		DaoMaster daoMaster = null;
    		DaoSession daoSession = null;
    		EventDao eventDao = null;

    		daoMaster = new DaoMaster(db);
    		daoSession = daoMaster.newSession();
    		eventDao = daoSession.getEventDao();
    		
    		events = eventDao.queryBuilder().where(Properties.EventId.eq(93)).list();
    		
    		// Altera João Bosco para apresentações ao inves de noite FEIA
    		for (Event e : events) {
    			if(e.getName().contains("Bosco")){
    				e.setType(1);
    				e.setCategory(1);
    				e.setName(e.getName().substring(e.getName().indexOf("João Bosco")));
    		
    				eventDao.update(e);
    			}
    		}
    		
    		events = eventDao.queryBuilder().where(Properties.EventId.eq(83)).list();
    		
    		// Remove Duo Catrumano 
    		for (Event e : events) {
    			if(e.getName().contains("Catrumano")){
    				eventDao.delete(e);
    			}
    		}
    		
    		events = eventDao.queryBuilder().where(Properties.EventId.eq(85)).list();
    		
    		// Altera lugar do Meia duzia de 3 ou 4
    		for (Event e : events) {
    			if(e.getName().contains("3 ou 4")){
    				e.setPlaceData("Vão do PB");
    				
    				eventDao.update(e);
    			}
    		}
    		
    		events = eventDao.queryBuilder().where(Properties.EventId.eq(90)).list();
    		
    		// Altera noite feia do padre do balão para galo de briga
    		for (Event e : events) {
    			if(e.getName().contains("Padre")){
    				e.setName("Noite FEIA - Galo de Briga");
    				e.setDescription("O grupo Galos de Briga se propõe a compartilhar um " +
    						"repertório vasto que abrange várias vertentes do samba, " +
    						"valorizando tanto a formação tradicional de instrumentos " +
    						"que compõem uma clássica roda de samba como uma " +
    						"instrumentação mais moderna. De Nelson Cavaquinho, Cartola, " +
    						"Paulinho da Viola a sambistas mais recentes como compositores " +
    						"do Cacique de Ramos e outros contemporâneos, o repertório " +
    						"abarca de maneira significativa a trajetória pela qual esse " +
    						"estilo musical se consolidou e vem se ressignificando. O " +
    						"grupo é composto por músicos amigos que estudaram e se " +
    						"conheceram na Unicamp e em projetos culturais que têm como " +
    						"norte principal o samba, buscando não somente a execução " +
    						"mecânica da música, mas sim o engrandecimento deste em sua " +
    						"expressão no âmbito sócio-cultural.");
    				
    				eventDao.update(e);
    			}
    		}
    		
    	}
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(EventDao.class);
        registerDaoClass(MyEventDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
